from hulk_grammar import *


regex_table = [
    (forx, "for"),
    (let, "let"),
    (ifx, "if"),
    (elsex, "else"),
    (elifx, "elif"),
    (whilex, "while"),
    (fun, "function"),
#    (idx, "print"),
#    ("pi", "pi"),
#    ("e", "e"),
    (new, "new"),
    (inher, "inherits"),
#    ("protocol", "protocol"),
    (typex, "type"),
    (inx, "in"),
    (boolx, "true"),
    (boolx, "false"),
#    ("extends", "extends"),
#    (idx, "sin"),
#    (idx, "cos"),
#    (idx, "tan"),
#    (idx, "sqrt"),
#    (idx, "exp"),
#    (idx, "log"),
#    (idx, "rand"),
    (plus, "\\+"),
    (star, "\\*"),
    (minus, "-"),
    (div, "/"),
    (equal, "="),
    (dequal, "=="),
    (minor, "<"),
    (mayor, ">"),
    (eminor, "<="),
    (emayor, ">="),
    (opar, "\\("),
    (cpar, "\\)"),
#    ("lbrack", "\["),
#    ("rbrack", "\]"),
    (ocur, "{"),
    (ccur, "}"),
    (comma, ","),
    (dot, "\\."),
    (colon, ":"),
    (semi, ";"),
    ("arrow", "->"),
    (rarrow, "=>"),
    (andx, "&"),
    (orx, "\\|"),
    (notx, "\\!"),
    (congr, "%"),
    (power, "^"),
    (dequal, ":="),
    (conct, "@"),
    (dconct, "@@"),
    (isx, "is"),
    (asx, "as"),
    (idx, "([a..z]|[A..Z]|_)([a..z]|[A..Z]|_|[0..9])*"),
    (num, "([0..9]+\\.)?[0..9]+"),
    (string, "\"((\\\\\")|(\\A))*\"")
]
